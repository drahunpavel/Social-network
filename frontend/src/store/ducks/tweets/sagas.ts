import { TweetsApi } from './../../../services/api/tweetsApi';
import { call, put, takeEvery, takeLatest } from "redux-saga/effects";
import { addTweet, setTweets, setTweetsLoadingState } from "./actionCreators";
import { LoadingState, Tweet } from './contracts/state';
import { FetchAddTweetsActionInterface, TweetsActionsType } from './contracts/actionTypes';

export function* fetchTweetsRequest() {
    //–ø–æ–ª—É—á–∞—é –º–∞—Å—Å–∏–≤ —Ç–≤–∏—Ç–æ–≤
    const items = yield call(TweetsApi.fetchTweets);
    //–¥–æ–±–∞–≤–ª—è—é –∏—Ö –≤ —Ä–µ–¥–∞–∫—Å
    try{
        //yield put - —ç—Ç–æ –∫–∞–∫ dispath –≤ —Ä–µ–¥–∞–∫—Å–µ
        yield put(setTweets(items))
    }catch(error){
        yield put(setTweetsLoadingState(LoadingState.ERROR));
    }
};

//—Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
export function* fetchAddTweetRequest({payload}:FetchAddTweetsActionInterface) {
    const data: Tweet = {
        _id: Math.random().toString(36).substr(2),
        text: payload,
        user: {
          fullname: 'Brian Vaughn üñ§',
          username: 'brian_d_vaughn',
          avatarUrl: 'https://pbs.twimg.com/profile_images/1290320630521487362/UKVSbU2V_bigger.jpg',
        },
      };
  
    const items = yield call(TweetsApi.addTweet, data);
    try{
        //–¥–æ–±–∞–≤–ª—è—é –∏—Ö –≤ —Ä–µ–¥–∞–∫—Å
        //yield put - —ç—Ç–æ –∫–∞–∫ dispath –≤ —Ä–µ–¥–∞–∫—Å–µ
        yield put(addTweet(items))
    }catch(error){
        yield put(setTweetsLoadingState(LoadingState.ERROR));
    }
};

// export function* tweetsSaga() {
//     //takeLatest - –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–∫—à–µ–Ω
//     yield takeEvery(
//         TweetsActionsType.FETCH_TWEETS, fetchTweetsRequest,
//         TweetsActionsType.FETCH_ADD_TWEET, addTweetRequest
//     );
// };
export function* tweetsSaga() {
    //takeLatest - –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–∫—à–µ–Ω
    yield takeLatest(TweetsActionsType.FETCH_TWEETS, fetchTweetsRequest);
    yield takeLatest(TweetsActionsType.FETCH_ADD_TWEET, fetchAddTweetRequest);
};